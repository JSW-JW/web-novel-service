/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'groovy'
    id 'jacoco'
}

apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.7"
}

test {
    useJUnitPlatform()
    jacoco {
        enabled = true
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
}

repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

sourceSets {
    test {
        groovy.srcDirs = ['src/test/groovy']
        java.srcDirs = []
    }
}

configurations {
    configureEach {
        resolutionStrategy {
            force 'org.apache.groovy:groovy-xml:4.0.6'
        }
    }
}

dependencies {
    implementation 'com.google.guava:guava:30.1-jre'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.security:spring-security-oauth2-client'

    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:3.0.3'
    implementation 'org.springframework.cloud:spring-cloud-starter-aws-secrets-manager-config:2.2.6.RELEASE'
//    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'org.modelmapper:modelmapper:2.4.3'

    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'
    implementation 'org.springdoc:springdoc-openapi-webmvc-core:1.7.0'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.2'
    implementation 'org.codehaus.janino:janino:3.1.6'

    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'javax.cache:cache-api'
    implementation 'org.ehcache:ehcache:3.6.1'

    testImplementation 'org.spockframework:spock-core'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'mysql:mysql-connector-java:8.0.28'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

    testImplementation 'org.spockframework:spock-spring:2.3-groovy-3.0'
    testImplementation 'org.spockframework:spock-core:2.3-groovy-3.0'

    testImplementation 'io.rest-assured:rest-assured:4.5.0'
    testImplementation 'org.codehaus.groovy:groovy:3.0.14'
    testImplementation 'io.rest-assured:json-path:4.5.0'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
}


group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'web-novel-service'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}
